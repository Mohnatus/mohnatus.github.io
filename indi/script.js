const TYPING_SPEED = 40;
const LS_KEY = 'pupyr';

const text = [
	// День 1

	[
		`Много лун назад жил-был индеец по прозвищу Гладкая Пятка.`,
		`Он был молод, красив и строен. И пятки у него были гладкие, как попка младенца.`,
		`Гладкая Пятка любил и оберегал свои пятки, ибо это был дар Богов.`,
		`***`,
	],

	// День 2

	[
		`Гладкая Пятка был самым младшим индейцем в своем племени, его все пинали и обижали, и никто не воспринимал его всерьез.`,
		`Поэтому он решил создать свое собственное племя с мескалином и ловцами снов.`,
	],

	// День 3

	[
		`Гладкая Пятка собрал все свои вещички в узелок, смазал свои гладкие пятки барсучьим жиром и отправился на поиски новых членов племени.`,
		`***`,
		`Он долго шел, пока не наткнулся на ужасный Лес Гигантских Кактусов, о котором ходили самые страшные слухи.`,
	],

	// День 4

	[
		`Гладкая Пятка сел перед лесом, раскурил свою трубку, выдолбленную из кукурузного початка, и глубоко задумался.`,
		`Лес был густой и пугал молодого индейца. Стоит ли ему заходить туда, или лучше обойти стороной?`,
		`Но Гладкой Пятке не у кого было спросить совета, ведь только шаманы ведают волю богов, а у Гладкой Пятки еще не было своего шамана.`,
	],

	// День 5

	[
		`Гладкая Пятка решил рискнуть и вошел в Лес Гигантских Кактусов и сразу же пожалел об этом.`,
		`Внутри было страшно.`,
		`Кактусиные тени пугали его, злобные иглы на каждом шагу норовили проткнуть его насквозь.`,
		`На каждом шагу ему мерещились ужасные существа, что прятались за толстыми кактусами и подозрительно на него смотрели.`,
	],

	// День 6

	[
		`Он шел и шел, и снова шел и шел.`,
		`И вот захотел пить. Но ни одной реки не было в Лесу Гигантских Кактусов. Ни одна лужа не разлилась под его недружелюбными сводами.`,
		`Тогда Гладкая Пятка надрезал ствол одного кактуса и напился его соком.`,
	],

	// День 7

	[
		`Гладкая Пятка был совсем молод и неопытен, иначе он бы знал, что не следует пить кактусиный сок, если ты так молод и неопытен.`,
		`Мир вокруг него пришел в движение, Гигантские Кактусы сорвались с насиженных мест и начали водить хороводы вокруг индейца. Откуда-то сверху прилетел гигантский таракан и сел Гладкой Пятке на голову.`,
		`Измученный и перепуганный индеец потерял сознание и упал лицом прямо в муравейник.`,
	],

	// День 8

	[
		`Когда он очнулся, то увидел перед собой неземной красоты женщину. Она делала примочки на его опухшее лицо и тихонько напевала себе под нос модную среди индейцев попсовую песенку:`,
		`«Стоит в саду, сверкает, отражая солнца свет…»`,
		`А вокруг нее бегали туда-сюда гигантские тараканы.`,
	],

	// День 9

	[
		`Гладкая Пятка влюбился без памяти в то же мгновение и спросил у женщины:`,
		`- Кто ты, прекрасная незнакомка?`,
		`Незнакомка захихикала, бросила в него тараканом и убежала.`,
	],

	// День 10

	[
		`Гладкая Пятка отправился искать ее и нашел за толстым стволом ближайшего гигантского кактуса.`,
		`Так родилась величайшая любовь, о которой еще многие поколения будут слагать частушки и побасенки.`,
		`Имя прекрасной индейки не сохранилось, но в историю она вошла как Говорящая с тараканами.`,
	],

	// День 11

	[
		`Говорящая с тараканами стала первым членом нового племени Гладкой Пятки и его шаманом. И хоть волю богов она и не знала, но знала волю тараканов - и этого оказалось достаточно, чтобы благополучно выйти из страшного Леса Гигантских Кактусов.`,
		`***`,
		`Чтобы его племя считалось полноценным, Гладкой Пятке не хватало еще одного индейца, поэтому он со своей молодой и прекрасной скво продолжил путь.`,
	],

	// День 12

	[
		`Они долго шли, и путь их был легким, потому что Гладкая Пятка любил Говорящую с тараканами, а она любила его.`,
		`Но в пути им не встретился ни один перспективный индеец, и Гладкая Пятка очень расстроился.`,
		`- Не быть мне великим вождем, - сокрушался он. - Я даже собрать свое племя не способен.`,
	],

	// День 13

	[
		`Видя страдания своего вождя Говорящая с тараканами остановилась, села на землю и раскурила трубку, выдолбленную из кукурузного початка, которую отобрала у Гладкой Пятки.`,
	],

	// День 14

	[
		`Войдя в транс, Говорящая с тараканами начала говорить со своими тараканами. Она спросила тараканов:`,
		`- Тараканы, куда нам идти? Где мы сможем найти перспективных индейцев для нашего племени?`,
	],

	// День 15

	[
		`Тараканы подумали и указали на запад.`,
		`Говорящая с тараканами испуганно ахнула:`,
		`- Тараканы, вы уверены, что нужно идти именно туда? На западе лежит земля, населенная ужасными монстрами - длинноногими птицами с каменными головами, бронированными кругляшами, ядовитыми гадами. Но страшней всех - ужасная капибара. Никто из видевших ее не вернулся, чтобы рассказать об этой встрече.`,
		`Тараканы пожали плечами и снова указали на запад.`,
	],

	// День 16

	[
		`В ужасе Говорящая с тараканами передала своему вождю волю тараканов.`,
		`Гладкая пятка пожал плечами и пошел на запад.`,
	],

	// День 17

	[
		`Они шли и шли, и снова шли и шли, и наконец устали и легли спать.`,
		`Утром, едва лишь первые лучи солнца озарили горизонт, Гладкая Пятка проснулся от странного громкого звука - кто-то блевал в соседних кустах.`,
	],

	// День 18

	[
		`Вождь подобрал свой томагавк и уже готов был пойти разбираться, как вдруг заметил, что его окружила стая кровожадных бронированных кругляшей.`,
		`О, если бы этим монстрам удалось подобраться к Гладкой Пятке во сне, застать вождя врасплох, ничего не смогло бы спасти его и его скво. Но сейчас, разбуженный заранее громкими звуками, он был готов и легко раскидал всех нападавших.`,
	],

	// День 19

	[
		`После сражения Гладкая Пятка пошел искать своего спасителя, чтобы поблагодарить его.`,
		`Так он нашел последнего члена своего племени - Того, кто блюет на рассвете.`,
		`***`,
	],

	// День 20

	[
		`Молодое племя отправилось на поиски клочка земли, где оно могло бы осесть и вести мирное хозяйство в единении с матерью-природой.`,
	],

	// День 21

	[
		`Они шли и шли, и снова шли и шли.`,
		`Время от времени Говорящая с тараканами останавливалась и говорила с тараканами, просила у них совета. И тараканы всегда отвечали ей и давали совет.`,
	],

	// День 22

	[
		`В очередной раз тараканы сказали:`,
		`- За вами хвост.`,
		`И больше ничего не сказали. И сколько бы Говорящая с тараканами не пыталась поговорить, тараканы молчали.`,
	],

	// День 23

	[
		`Испуганные члены племени отправилось дальше, а хвост по-прежнему был за ними.`,
		`Они шли много дней, а хвост по-прежнему был за ними.`,
	],

	// День 24

	[
		`Наконец, Тот, кто блюет на рассвете не выдержал и сказал:`,
		`- Товарищи индейцы, за нами хвост, до каких пор мы будем игнорировать этот факт?`,
	],

	// День 25

	[
		`Вождь Гладкая Пятка задумался. Он обратился к своему шаману за советом.`,
		`Говорящая с тараканами раскинула своих тараканов и сказала:`,
		`- Кажется, пора принять свою судьбу.`,
	],

	// День 26

	[
		`Вождь Гладкая Пятка согласился и принял Хвост в свое племя.`,
		`Хвост был невероятно счастлив такому повороту событий. Особенно сильно он был благодарен Тому, кто блюет на рассвете, который первым заметил Хвост.`,
		`Так в племени появился Скулящий по коту.`,
		`***`,
	],

	//День 27

	[
		`Гладкая Пятка и его маленькое, но гордое племя еще долго бродили по прерии, слушая советы тараканов.`,
		`И долго бы еще бродили, но случайно нашли райский уголок и обосновались там.`,
	],

	//День 28

	[
		`От долгих странствий, стрессов, плохой экологии и тяжелого характера Говорящей с тараканами пятки вождя загрубели, скукожились и покрылись морщинами.`,
		`Они уже не были такими гладкими и невинными как раньше.`,
		`Это была жертва, которую Гладкой Пятке пришлось принести богам за обретенное счастье. И он с достоинством принес ее.`,
		`Он стал великим вождем и племя его процветало. И по сей день индейцы рассказывают легенды про Могучего Вождя Морщинистую Пятку и его счастливое племя.`,
		`***`,
	],

	//День 29

	[
		`Могучий Вождь Морщинистая Пятка прожил долгую и славную жизнь.`,
		`И конец его был таким же славным.`,
		`Легенда гласит, что много лун спустя Могучий Вождь встретил на своем пути ужасную капибару и вступил с ней в жестокую схватку. Он сражался храбро и умело, но был побежден могучим врагом и отправился в вечное странствие по бесконечным прериям.`,
	],
];

const codes = [
	'01бильбо185',
	'02бублик111',

	'03кот751',
	'04фримэн914',
	'05мяузилла281',
	'06мяули011',

	'07бильбоунсли15',
	'08котяузер424',

	'09пиздрик519',
	'10охиелла281',
	'11рыська751',
	'12ёжик928',
	'13тигрёнок183',
	'14зая224',

	'15пупок925',
	'16пупочек518',
	'17пупырка192',

	'18тварёныш91',
	'19мохнуль815',
	'20мохнатушка192',
	'21меховичок151',

	'22котогавия851',
	'23котярх329',
	'24котярхия451',

	'25пердундель832',
	'26шлёпышек19',
	'27хьютрандудель255',
	'28курагусь181',
	'29соплюш929',
];

let usedCodes = [];

const bonusCode = '4686';

const $text = document.getElementById('text');
const $codeForm = document.getElementById('code');
const $codeError = $codeForm.querySelector('.error');
const $codeInput = $codeForm.elements.code;
const $addCode = document.getElementById('add');
const $bonusForm = document.getElementById('bonus-form');
const $bonus = document.getElementById('bonus');
const $bonusBtn = document.getElementById('bonus-btn');

function resetSavedDataFromLs() {
	localStorage.setItem(LS_KEY, ``);
	location.reload();
}

function getUsedCodesFromLS() {
	const data = localStorage.getItem(LS_KEY) || '';
	return data.split(',').filter(Boolean);
}

function savedUsedCodeToLS(code) {
	const data = localStorage.getItem(LS_KEY) || '';
	localStorage.setItem(LS_KEY, `${data},${code}`);
}

function createParagraphs(fragment, index) {
	const $wrapper = document.createElement('div');
	$wrapper.dataset.index = index;

	fragment.forEach((p) => {
		const $p = document.createElement('p');
		$p.innerHTML = p;
		$p.dataset.index = index;
		$wrapper.appendChild($p);
	});

	return $wrapper;
}

function renderFragments(from, to) {
	const fragments = text.slice(from, to);

	const $wrapper = document.createDocumentFragment();
	fragments.forEach((fr, i) => {
		const $p = createParagraphs(fr, i + from);
		$wrapper.appendChild($p);
	});

	$text.appendChild($wrapper);

	setTimeout(() => {
		window.scrollTo(0, document.body.scrollHeight);
	}, 500);
}

function typeParagraph(text, $container) {
	return new Promise((resolve) => {
		function tick(i) {
			if (i > text.length) {
				resolve();
				return;
			}

			$container.textContent = text.slice(0, i);
			setTimeout(() => {
				tick(i + 1);
			}, TYPING_SPEED);
		}

		tick(0);
	});
}

function addFragment(index) {
	const fragment = text[index];
	$text.scrollIntoView({ block: 'end' });

	const $wrapper = document.createElement('div');
	$wrapper.dataset.index = index;
	$text.appendChild($wrapper);

	$text.dataset.index = index;

	function tick(i) {
		if (i >= fragment.length) return;

		const $p = document.createElement('p');
		$p.dataset.index = index;
		$wrapper.appendChild($p);

		typeParagraph(fragment[i], $p).then(() => {
			i++;
			tick(i++);
		});
	}

	tick(0);
}

function onCorrectCode(code) {
	usedCodes.push(code);
	savedUsedCodeToLS(code);
	addFragment(usedCodes.length - 1);
}

function checkCode(code) {
	const normalizedCode = code.trim().toLowerCase();
	if (!normalizedCode) return { error: 'Введите код' };
	if (usedCodes.includes(normalizedCode))
		return { error: 'Этот код уже использовался' };
	if (codes.includes(normalizedCode)) return { success: true };
	return { error: 'Неверный код' };
}

function setError(error) {
	$codeError.textContent = error || '';
}

function resetForm() {
	setError('');
	$codeInput.value = '';
}

function handleCodeFormSubmit(e) {
	e.preventDefault();

	const code = $codeInput.value;
	const check = checkCode(code);

	if (check.error) {
		setError(check.error);
	} else if (check.success) {
		resetForm();
		$codeForm.hidden = true;
		onCorrectCode(code);
	}
}

function initModals() {
	Array.from(document.querySelectorAll('.modal')).forEach((modal) => {
		const mask = modal.querySelector('.mask');
		mask.addEventListener('click', () => {
			modal.hidden = true;
		});
		const closeButtons = Array.from(modal.querySelectorAll('[data-close]'));
		closeButtons.forEach((btn) => {
			btn.addEventListener('click', () => {
				modal.hidden = true;
			});
		});
	});
}

function showModal(id) {
	const $modal = document.getElementById(id);
	$modal.hidden = false;
}

function init() {
	const sp = new URLSearchParams(location.search.slice(1));
	if (sp.has('reset')) {
		resetSavedDataFromLs();
	}

	initModals();

	usedCodes = getUsedCodesFromLS();
	renderFragments(0, usedCodes.length);
	$text.dataset.index = usedCodes.length - 1;

	$codeForm.addEventListener('submit', handleCodeFormSubmit);

	$addCode.addEventListener('click', () => {
		$codeForm.hidden = false;
		$codeForm.elements.code.focus();
	});

	$bonusForm.addEventListener('submit', (e) => {
		e.preventDefault();
		const code = $bonusForm.elements.code.value.trim().toLowerCase();
		if (code === bonusCode) {
			localStorage.setItem('bonus', code);
			$bonus.hidden = false;
			$bonusForm.hidden = true;
		}
	});

	$bonusBtn.addEventListener('click', (e) => {
		const savedCode = localStorage.getItem('bonus');
		if (savedCode === bonusCode) {
			$bonus.hidden = false;
			return;
		}
		$bonusForm.hidden = false;
	});
}

init();
