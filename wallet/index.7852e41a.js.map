{"mappings":"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","sources":["<anon>","src/script.js"],"sourcesContent":["// Constants\nconst DB_NAME = \"wallet\";\nconst DB_VERSION = 2;\nconst ITEMS_STORE_NAME = \"items\";\nconst TAGS_STORE_NAME = \"tags\";\nlet items = [];\nlet tags = [];\nlet lastItemId = 0;\nlet lastTagId = 0;\n// Elements\nconst $itemsList = document.getElementById(\"items\");\nconst $itemTemplate = document.getElementById(\"item-tmpl\");\nconst $newItemDialog = document.getElementById(\"new-item-dialog\");\nconst $newItemForm = document.getElementById(\"new-item-form\");\nconst $addItemBtn = document.getElementById(\"add-item\");\nconst $closeNewItemDialogBtn = document.getElementById(\"close-new-item-dialog\");\nconst $tagsList = document.getElementById(\"tags\");\nconst $tagTemplate = document.getElementById(\"tag-tmpl\");\nconst $newTagDialog = document.getElementById(\"new-tag-dialog\");\nconst $newTagForm = document.getElementById(\"new-tag-form\");\nconst $addTagBtn = document.getElementById(\"add-tag\");\nconst $closeNewTagDialogBtn = document.getElementById(\"close-new-tag-dialog\");\nconst $tagsSelect = document.getElementById(\"tags-select\");\nconst $newItemFormSubitemsList = document.getElementById(\"new-item-form-subitems\");\nconst $newItemAddSubitemBtn = document.getElementById(\"new-item-add-subitem\");\nconst $subitemFormTemplate = document.getElementById(\"subitem-form-tmpl\");\nconst $subitemTemplate = document.getElementById(\"subitem-tmpl\");\n// Render\nfunction renderItem(item) {\n    const $clone = $itemTemplate.content.cloneNode(true);\n    const $item = $clone.querySelector(\".item\");\n    $item.querySelector(\".item-text\").textContent = item.text;\n    $item.querySelector(\".item-price\").textContent = item.price;\n    const itemTag = tags.find((tag)=>tag.id === item.tag);\n    $item.querySelector(\".item-tag\").textContent = itemTag?.name || \"\";\n    $item.querySelector(\".item-remove\").onclick = ()=>{\n        items = items.filter((i)=>i.id !== item.id);\n        removeItemFromDb(item);\n        $item.remove();\n    };\n    if (item.subitems?.length > 0) {\n        const $subitemsList = $item.querySelector(\".item-subitems\");\n        item.subitems.forEach((subitem)=>{\n            const $subitem = renderSubitem(subitem);\n            $subitemsList.appendChild($subitem);\n        });\n    }\n    return $item;\n}\nfunction renderItems() {\n    items.forEach((item)=>{\n        const $item = renderItem(item);\n        $itemsList.appendChild($item);\n    });\n}\nfunction renderSubitemForm() {\n    const $clone = $subitemFormTemplate.content.cloneNode(true);\n    const $subitem = $clone.querySelector(\".subitem-form\");\n    const $subitemSelect = $subitem.querySelector(\"select\");\n    tags.forEach((tag)=>{\n        const $tag = renderTagOption(tag);\n        $subitemSelect.appendChild($tag);\n    });\n    return $subitem;\n}\nfunction renderSubitem(subitem) {\n    const $clone = $subitemTemplate.content.cloneNode(true);\n    const $subitem = $clone.querySelector(\".subitem\");\n    $subitem.querySelector(\".subitem-text\").textContent = subitem.text;\n    $subitem.querySelector(\".subitem-price\").textContent = subitem.price;\n    const subitemTag = tags.find((tag)=>tag.id === subitem.tag);\n    $subitem.querySelector(\".subitem-tag\").textContent = subitemTag?.name || \"\";\n    return $subitem;\n}\nfunction renderTag(tag) {\n    const $clone = $tagTemplate.content.cloneNode(true);\n    const $tag = $clone.querySelector(\".tag\");\n    $tag.querySelector(\".tag-name\").textContent = tag.name;\n    $tag.querySelector(\".tag-remove\").onclick = ()=>{\n        const tagItems = items.filter((item)=>item.tag === tag.id);\n        if (tagItems.length > 0) {\n            alert(\"Тег нельзя удалить\");\n            console.log({\n                tagItems\n            });\n            return;\n        }\n        tags = tags.filter((t)=>t.id !== tag.id);\n        removeTagFromDb(tag);\n        $tag.remove();\n        updateTagsSelect();\n    };\n    return $tag;\n}\nfunction renderTags() {\n    tags.forEach((tag)=>{\n        const $tag = renderTag(tag);\n        $tagsList.appendChild($tag);\n    });\n}\nfunction renderTagOption(tag) {\n    const $option = document.createElement(\"option\");\n    $option.textContent = tag.name;\n    $option.value = tag.id;\n    return $option;\n}\nfunction updateTagsSelect() {\n    $tagsSelect.innerHTML = \"\";\n    tags.forEach((tag)=>{\n        const $option = renderTagOption(tag);\n        $tagsSelect.appendChild($option);\n    });\n}\nfunction resetNewItemForm() {\n    $newItemForm.reset();\n    $newItemFormSubitemsList.innerHTML = \"\";\n}\n// Database\nconst dbRequest = indexedDB.open(DB_NAME, DB_VERSION);\ndbRequest.onupgradeneeded = function() {\n    let db = dbRequest.result;\n    if (!db.objectStoreNames.contains(ITEMS_STORE_NAME)) db.createObjectStore(ITEMS_STORE_NAME, {\n        keyPath: \"id\"\n    });\n    if (!db.objectStoreNames.contains(TAGS_STORE_NAME)) db.createObjectStore(TAGS_STORE_NAME, {\n        keyPath: \"id\"\n    });\n};\ndbRequest.onerror = function() {\n    console.error(\"DB ERROR\", dbRequest.error);\n};\ndbRequest.onsuccess = function() {\n    let db = dbRequest.result;\n    // Получить записи\n    let tagsTransaction = db.transaction(TAGS_STORE_NAME);\n    let tagsStore = tagsTransaction.objectStore(TAGS_STORE_NAME);\n    const tagsRequest = tagsStore.getAll();\n    tagsRequest.onsuccess = function() {\n        const result = tagsRequest.result;\n        if (result.length > 0) lastTagId = result[result.length - 1].id;\n        tags = result;\n        renderTags();\n        updateTagsSelect();\n        let itemsTransaction = db.transaction(ITEMS_STORE_NAME);\n        let itemsStore = itemsTransaction.objectStore(ITEMS_STORE_NAME);\n        const itemsRequest = itemsStore.getAll();\n        itemsRequest.onsuccess = function() {\n            const result = itemsRequest.result;\n            if (result.length > 0) lastItemId = result[result.length - 1].id;\n            items = result;\n            renderItems();\n        };\n    };\n};\nfunction addItemToDb(item) {\n    let db = dbRequest.result;\n    let transaction = db.transaction(ITEMS_STORE_NAME, \"readwrite\");\n    let items = transaction.objectStore(ITEMS_STORE_NAME);\n    let request = items.add(item);\n    request.onsuccess = function() {\n        alert(\"Запись успешно сохранена\");\n    };\n    request.onerror = function() {\n        alert(\"Не удалось сохранить запись\");\n        console.error(request.error);\n    };\n}\nfunction removeItemFromDb(item) {\n    let db = dbRequest.result;\n    let transaction = db.transaction(ITEMS_STORE_NAME, \"readwrite\");\n    let items = transaction.objectStore(ITEMS_STORE_NAME);\n    let request = items.delete(item.id);\n    request.onsuccess = function() {\n        alert(\"Запись успешно удалена\");\n    };\n    request.onerror = function() {\n        alert(\"Не удалось удалить запись\");\n        console.error(request.error);\n    };\n}\nfunction addTagToDb(tag) {\n    let db = dbRequest.result;\n    let transaction = db.transaction(TAGS_STORE_NAME, \"readwrite\");\n    let tags = transaction.objectStore(TAGS_STORE_NAME);\n    let request = tags.add(tag);\n    request.onsuccess = function() {\n        alert(\"Запись успешно сохранена\");\n    };\n    request.onerror = function() {\n        alert(\"Не удалось сохранить запись\");\n        console.error(request.error);\n    };\n}\nfunction removeTagFromDb(tag) {\n    let db = dbRequest.result;\n    let transaction = db.transaction(TAGS_STORE_NAME, \"readwrite\");\n    let tags = transaction.objectStore(TAGS_STORE_NAME);\n    let request = tags.delete(tag.id);\n    request.onsuccess = function() {\n        alert(\"Запись успешно удалена\");\n    };\n    request.onerror = function() {\n        alert(\"Не удалось удалить запись\");\n        console.error(request.error);\n    };\n}\n// DOM\n$newItemForm.addEventListener(\"submit\", (e)=>{\n    e.preventDefault();\n    const fd = new FormData($newItemForm);\n    const subitemTexts = fd.getAll(\"subitems[text][]\");\n    const subitemPrices = fd.getAll(\"subitems[price][]\");\n    const subitemTags = fd.getAll(\"subitems[tag][]\");\n    const createdAt = +new Date();\n    const newItem = {\n        id: ++lastItemId,\n        text: fd.get(\"text\"),\n        price: fd.get(\"price\"),\n        tag: Number(fd.get(\"tag\")),\n        createdAt,\n        subitems: subitemTexts.map((text, i)=>{\n            return {\n                id: ++lastItemId,\n                text,\n                price: subitemPrices[i],\n                tag: Number(subitemTags[i]),\n                createdAt\n            };\n        })\n    };\n    items.push(newItem);\n    const $item = renderItem(newItem);\n    $itemsList.appendChild($item);\n    addItemToDb(newItem);\n    resetNewItemForm();\n    $newItemDialog.close();\n});\n$addItemBtn.addEventListener(\"click\", ()=>{\n    $newItemDialog.showModal();\n});\n$closeNewItemDialogBtn.addEventListener(\"click\", ()=>{\n    resetNewItemForm();\n    $newItemDialog.close();\n});\n$newTagForm.addEventListener(\"submit\", (e)=>{\n    e.preventDefault();\n    const newTag = {\n        id: ++lastTagId,\n        name: $newTagForm.elements.name.value,\n        createdAt: +new Date()\n    };\n    tags.push(newTag);\n    const $tag = renderTag(newTag);\n    $tagsList.appendChild($tag);\n    const $tagOption = renderTagOption(newTag);\n    $tagsSelect.appendChild($tagOption);\n    addTagToDb(newTag);\n    $newTagForm.reset();\n    $newTagDialog.close();\n});\n$addTagBtn.addEventListener(\"click\", ()=>{\n    $newTagDialog.showModal();\n});\n$closeNewTagDialogBtn.addEventListener(\"click\", ()=>{\n    $newTagForm.reset();\n    $newTagDialog.close();\n});\n$newItemAddSubitemBtn.addEventListener(\"click\", ()=>{\n    const $subitemForm = renderSubitemForm();\n    $newItemFormSubitemsList.appendChild($subitemForm);\n});\n\n//# sourceMappingURL=index.7852e41a.js.map\n","// Constants\nconst DB_NAME = \"wallet\";\nconst DB_VERSION = 2;\nconst ITEMS_STORE_NAME = \"items\";\nconst TAGS_STORE_NAME = \"tags\";\n\nlet items = [];\nlet tags = [];\n\nlet lastItemId = 0;\nlet lastTagId = 0;\n\n// Elements\nconst $itemsList = document.getElementById(\"items\");\nconst $itemTemplate = document.getElementById(\"item-tmpl\");\nconst $newItemDialog = document.getElementById(\"new-item-dialog\");\nconst $newItemForm = document.getElementById(\"new-item-form\");\nconst $addItemBtn = document.getElementById(\"add-item\");\nconst $closeNewItemDialogBtn = document.getElementById(\n  \"close-new-item-dialog\"\n);\nconst $tagsList = document.getElementById(\"tags\");\nconst $tagTemplate = document.getElementById(\"tag-tmpl\");\nconst $newTagDialog = document.getElementById(\"new-tag-dialog\");\nconst $newTagForm = document.getElementById(\"new-tag-form\");\nconst $addTagBtn = document.getElementById(\"add-tag\");\nconst $closeNewTagDialogBtn = document.getElementById(\n  \"close-new-tag-dialog\"\n);\nconst $tagsSelect = document.getElementById(\"tags-select\");\nconst $newItemFormSubitemsList = document.getElementById(\n  \"new-item-form-subitems\"\n);\nconst $newItemAddSubitemBtn = document.getElementById(\n  \"new-item-add-subitem\"\n);\nconst $subitemFormTemplate = document.getElementById(\"subitem-form-tmpl\");\nconst $subitemTemplate = document.getElementById(\"subitem-tmpl\");\n\n// Render\nfunction renderItem(item) {\n  const $clone = $itemTemplate.content.cloneNode(true);\n  const $item = $clone.querySelector(\".item\");\n  $item.querySelector(\".item-text\").textContent = item.text;\n  $item.querySelector(\".item-price\").textContent = item.price;\n  const itemTag = tags.find((tag) => tag.id === item.tag);\n  $item.querySelector(\".item-tag\").textContent = itemTag?.name || \"\";\n  $item.querySelector(\".item-remove\").onclick = () => {\n    items = items.filter((i) => i.id !== item.id);\n    removeItemFromDb(item);\n    $item.remove();\n  };\n  if (item.subitems?.length > 0) {\n    const $subitemsList = $item.querySelector(\".item-subitems\");\n    item.subitems.forEach((subitem) => {\n      const $subitem = renderSubitem(subitem);\n      $subitemsList.appendChild($subitem);\n    });\n  }\n\n  return $item;\n}\nfunction renderItems() {\n  items.forEach((item) => {\n    const $item = renderItem(item);\n    $itemsList.appendChild($item);\n  });\n}\nfunction renderSubitemForm() {\n  const $clone = $subitemFormTemplate.content.cloneNode(true);\n  const $subitem = $clone.querySelector(\".subitem-form\");\n  const $subitemSelect = $subitem.querySelector(\"select\");\n  tags.forEach((tag) => {\n    const $tag = renderTagOption(tag);\n    $subitemSelect.appendChild($tag);\n  });\n  return $subitem;\n}\nfunction renderSubitem(subitem) {\n  const $clone = $subitemTemplate.content.cloneNode(true);\n  const $subitem = $clone.querySelector(\".subitem\");\n  $subitem.querySelector(\".subitem-text\").textContent = subitem.text;\n  $subitem.querySelector(\".subitem-price\").textContent = subitem.price;\n\n  const subitemTag = tags.find((tag) => tag.id === subitem.tag);\n  $subitem.querySelector(\".subitem-tag\").textContent =\n    subitemTag?.name || \"\";\n\n  return $subitem;\n}\n\nfunction renderTag(tag) {\n  const $clone = $tagTemplate.content.cloneNode(true);\n  const $tag = $clone.querySelector(\".tag\");\n  $tag.querySelector(\".tag-name\").textContent = tag.name;\n  $tag.querySelector(\".tag-remove\").onclick = () => {\n    const tagItems = items.filter((item) => item.tag === tag.id);\n    if (tagItems.length > 0) {\n      alert(\"Тег нельзя удалить\");\n      console.log({ tagItems });\n      return;\n    }\n    tags = tags.filter((t) => t.id !== tag.id);\n    removeTagFromDb(tag);\n    $tag.remove();\n    updateTagsSelect();\n  };\n  return $tag;\n}\nfunction renderTags() {\n  tags.forEach((tag) => {\n    const $tag = renderTag(tag);\n    $tagsList.appendChild($tag);\n  });\n}\n\nfunction renderTagOption(tag) {\n  const $option = document.createElement(\"option\");\n  $option.textContent = tag.name;\n  $option.value = tag.id;\n  return $option;\n}\nfunction updateTagsSelect() {\n  $tagsSelect.innerHTML = \"\";\n\n  tags.forEach((tag) => {\n    const $option = renderTagOption(tag);\n    $tagsSelect.appendChild($option);\n  });\n}\n\nfunction resetNewItemForm() {\n  $newItemForm.reset();\n  $newItemFormSubitemsList.innerHTML = \"\";\n}\n\n// Database\nconst dbRequest = indexedDB.open(DB_NAME, DB_VERSION);\ndbRequest.onupgradeneeded = function () {\n  let db = dbRequest.result;\n  if (!db.objectStoreNames.contains(ITEMS_STORE_NAME)) {\n    db.createObjectStore(ITEMS_STORE_NAME, { keyPath: \"id\" });\n  }\n  if (!db.objectStoreNames.contains(TAGS_STORE_NAME)) {\n    db.createObjectStore(TAGS_STORE_NAME, { keyPath: \"id\" });\n  }\n};\ndbRequest.onerror = function () {\n  console.error(\"DB ERROR\", dbRequest.error);\n};\ndbRequest.onsuccess = function () {\n  let db = dbRequest.result;\n  // Получить записи\n\n  let tagsTransaction = db.transaction(TAGS_STORE_NAME);\n  let tagsStore = tagsTransaction.objectStore(TAGS_STORE_NAME);\n\n  const tagsRequest = tagsStore.getAll();\n  tagsRequest.onsuccess = function () {\n    const result = tagsRequest.result;\n    if (result.length > 0) {\n      lastTagId = result[result.length - 1].id;\n    }\n\n    tags = result;\n    renderTags();\n    updateTagsSelect();\n\n    let itemsTransaction = db.transaction(ITEMS_STORE_NAME);\n    let itemsStore = itemsTransaction.objectStore(ITEMS_STORE_NAME);\n\n    const itemsRequest = itemsStore.getAll();\n    itemsRequest.onsuccess = function () {\n      const result = itemsRequest.result;\n      if (result.length > 0) {\n        lastItemId = result[result.length - 1].id;\n      }\n\n      items = result;\n      renderItems();\n    };\n  };\n};\nfunction addItemToDb(item) {\n  let db = dbRequest.result;\n  let transaction = db.transaction(ITEMS_STORE_NAME, \"readwrite\");\n  let items = transaction.objectStore(ITEMS_STORE_NAME);\n  let request = items.add(item);\n\n  request.onsuccess = function () {\n    alert(\"Запись успешно сохранена\");\n  };\n\n  request.onerror = function () {\n    alert(\"Не удалось сохранить запись\");\n    console.error(request.error);\n  };\n}\nfunction removeItemFromDb(item) {\n  let db = dbRequest.result;\n  let transaction = db.transaction(ITEMS_STORE_NAME, \"readwrite\");\n  let items = transaction.objectStore(ITEMS_STORE_NAME);\n  let request = items.delete(item.id);\n\n  request.onsuccess = function () {\n    alert(\"Запись успешно удалена\");\n  };\n\n  request.onerror = function () {\n    alert(\"Не удалось удалить запись\");\n    console.error(request.error);\n  };\n}\nfunction addTagToDb(tag) {\n  let db = dbRequest.result;\n  let transaction = db.transaction(TAGS_STORE_NAME, \"readwrite\");\n  let tags = transaction.objectStore(TAGS_STORE_NAME);\n  let request = tags.add(tag);\n\n  request.onsuccess = function () {\n    alert(\"Запись успешно сохранена\");\n  };\n\n  request.onerror = function () {\n    alert(\"Не удалось сохранить запись\");\n    console.error(request.error);\n  };\n}\nfunction removeTagFromDb(tag) {\n  let db = dbRequest.result;\n  let transaction = db.transaction(TAGS_STORE_NAME, \"readwrite\");\n  let tags = transaction.objectStore(TAGS_STORE_NAME);\n  let request = tags.delete(tag.id);\n\n  request.onsuccess = function () {\n    alert(\"Запись успешно удалена\");\n  };\n\n  request.onerror = function () {\n    alert(\"Не удалось удалить запись\");\n    console.error(request.error);\n  };\n}\n\n// DOM\n$newItemForm.addEventListener(\"submit\", (e) => {\n  e.preventDefault();\n  const fd = new FormData($newItemForm);\n\n  const subitemTexts = fd.getAll(\"subitems[text][]\");\n  const subitemPrices = fd.getAll(\"subitems[price][]\");\n  const subitemTags = fd.getAll(\"subitems[tag][]\");\n\n  const createdAt = +new Date();\n\n  const newItem = {\n    id: ++lastItemId,\n    text: fd.get(\"text\"),\n    price: fd.get(\"price\"),\n    tag: Number(fd.get(\"tag\")),\n    createdAt,\n\n    subitems: subitemTexts.map((text, i) => {\n      return {\n        id: ++lastItemId,\n        text,\n        price: subitemPrices[i],\n        tag: Number(subitemTags[i]),\n        createdAt,\n      };\n    }),\n  };\n  items.push(newItem);\n  const $item = renderItem(newItem);\n  $itemsList.appendChild($item);\n  addItemToDb(newItem);\n  resetNewItemForm();\n  $newItemDialog.close();\n});\n\n$addItemBtn.addEventListener(\"click\", () => {\n  $newItemDialog.showModal();\n});\n\n$closeNewItemDialogBtn.addEventListener(\"click\", () => {\n  resetNewItemForm();\n  $newItemDialog.close();\n});\n\n$newTagForm.addEventListener(\"submit\", (e) => {\n  e.preventDefault();\n  const newTag = {\n    id: ++lastTagId,\n    name: $newTagForm.elements.name.value,\n    createdAt: +new Date(),\n  };\n  tags.push(newTag);\n  const $tag = renderTag(newTag);\n  $tagsList.appendChild($tag);\n  const $tagOption = renderTagOption(newTag);\n  $tagsSelect.appendChild($tagOption);\n  addTagToDb(newTag);\n  $newTagForm.reset();\n  $newTagDialog.close();\n});\n\n$addTagBtn.addEventListener(\"click\", () => {\n  $newTagDialog.showModal();\n});\n\n$closeNewTagDialogBtn.addEventListener(\"click\", () => {\n  $newTagForm.reset();\n  $newTagDialog.close();\n});\n\n$newItemAddSubitemBtn.addEventListener(\"click\", () => {\n  const $subitemForm = renderSubitemForm();\n  $newItemFormSubitemsList.appendChild($subitemForm);\n});"],"names":["ITEMS_STORE_NAME","TAGS_STORE_NAME","items","tags","lastItemId","lastTagId","$itemsList","document","getElementById","$itemTemplate","$newItemDialog","$newItemForm","$addItemBtn","$closeNewItemDialogBtn","$tagsList","$tagTemplate","$newTagDialog","$newTagForm","$addTagBtn","$closeNewTagDialogBtn","$tagsSelect","$newItemFormSubitemsList","$newItemAddSubitemBtn","$subitemFormTemplate","$subitemTemplate","renderItem","item","$clone","content","cloneNode","$item","querySelector","textContent","text","price","itemTag","find","tag","id","name","onclick","request","filter","i","transaction","db","dbRequest","result","objectStore","delete","onsuccess","alert","onerror","console","error","remove","subitems","length","$subitemsList","forEach","subitem","$subitem","renderSubitem","subitemTag","appendChild","renderTag","$tag","tagItems","log","t","updateTagsSelect","renderTagOption","$option","createElement","value","innerHTML","resetNewItemForm","reset","indexedDB","open","onupgradeneeded","objectStoreNames","contains","createObjectStore","keyPath","tagsStore","tagsTransaction","tagsRequest","getAll","itemsStore","itemsTransaction","itemsRequest","addEventListener","e","preventDefault","fd","FormData","subitemTexts","subitemPrices","subitemTags","createdAt","Date","newItem","get","Number","map","push","add","close","showModal","newTag","elements","$tagOption","$subitemForm","renderSubitemForm","$subitemSelect"],"version":3,"file":"index.7852e41a.js.map"}